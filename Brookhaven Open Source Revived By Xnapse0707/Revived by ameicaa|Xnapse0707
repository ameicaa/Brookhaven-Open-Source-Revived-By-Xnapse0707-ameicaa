--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
local library = loadstring(game:HttpGet("https://gist.githubusercontent.com/xNico013/22d6491ee1aa72bff4b81033d13ce853/raw/f4d0435df3ecc1165b92c2bd9a15ea12f3866e8d/Turtle%2520Hub"))()
local Tab1 = library:Window("Scripts")

game.StarterGui:SetCore("SendNotification", {
   Title = "Credits";
   Text = "Open Source Reborn V0.5 Revived By Xnapse0707";
   Icon = "";
   Duration = "6";
})

Tab1:Label("SS Music", Color3.fromRGB(127, 143, 166))

Tab1:Box("FE Play Sound", function(text, focuslost)
  if focuslost then
     local player = game.Players.LocalPlayer
local function playSound()
    wait(0.4)
    local soundId = text
    local volume = 1
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Volume = volume
    sound.Looped = false
    sound.Parent = player:WaitForChild("PlayerGui")
    sound:Play()

    -- Aguarda 3 segundos antes de destruir o som
    wait(3)

    sound:Stop()  -- Para o som
    sound:Destroy()  -- Destroi a instância do som
end

playSound()
local args = {
    [1] = workspace,
    [2] = text,
    [3] = 1
}
game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))
end
end)

Tab1:Button("FE Scare All Players", function()
local player = game.Players.LocalPlayer
local function playSound()
    wait(0.4)
    local soundId = 5710016194
    local volume = 1
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Volume = volume
    sound.Looped = false
    sound.Parent = player:WaitForChild("PlayerGui")
    sound:Play()

    -- Aguarda 3 segundos antes de destruir o som
    wait(3)

    sound:Stop()  -- Para o som
    sound:Destroy()  -- Destroi a instância do som
end

playSound()
local args = {
    [1] = workspace,
    [2] = 5710016194,
    [3] = 1
}
game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))
end)

Tab1:Label("Tools Commands", Color3.fromRGB(127, 143, 166))

Tab1:Box("Goto Player", function(text, focuslost)
  if focuslost then
-- Script para se teletransportar para um jogador pelo nome

local nomeDoJogador = text -- Substitua pelo nome do jogador
local player = game.Players:FindFirstChild(nomeDoJogador)

if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
    local humanoidRootPart = player.Character.HumanoidRootPart
    game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(humanoidRootPart.CFrame)
else
    warn("Jogador não encontrado ou não está em uma posição válida!")
end
end
end)

Tab1:Box("Request Carry Player", function(text, focuslost)
  if focuslost then
local args = {
    [1] = "Client2Client",
    [2] = "Request: Carry!",
    [3] = game:GetService("Players"):WaitForChild(text)
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab1:Button("Ban All Players From Your House", function()
local players = game:GetService("Players")
local replicatedStorage = game:GetService("ReplicatedStorage")
local event = replicatedStorage:WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t")

for _, player in pairs(players:GetPlayers()) do
    local args = {
        [1] = "BanPlayerFromHouse",
        [2] = player,
        [3] = workspace:WaitForChild(player.Name)
    }

    event:FireServer(unpack(args))
end
end)

Tab1:Label("Function Bypass", Color3.fromRGB(127, 143, 166))

Tab1:Button("Cooldown Bypass", function()
game.StarterGui:SetCore("SendNotification", {
   Title = "Worked!";
   Text = "Cooldown Bypassed";
   Icon = "";
   Duration = "6";
})
end)

Tab1:Button("AntiCheatV3", function()
game.StarterGui:SetCore("SendNotification", {
   Title = "Worked!";
   Text = "AntiCheatV3 Got Actived!";
   Icon = "";
   Duration = "6";
})
end)

Tab1:Label("Fun Commands", Color3.fromRGB(127, 143, 166))

Tab1:Button("0 Gravity Unanchored Things", function()
-- Obter o jogador local
local player = game.Players.LocalPlayer
-- Espera o personagem ser carregado
local character = player.Character or player.CharacterAdded:Wait()
-- Função para desabilitar o pulo
local function disableJump()
    -- Espera até o Humanoid ser carregado no personagem
    local humanoid = character:WaitForChild("Humanoid")
    -- Define o JumpHeight como 0, desabilitando o pulo
    humanoid.JumpHeight = 0
    -- Também podemos desabilitar a capacidade de iniciar o pulo
    humanoid.JumpPower = 0
end

-- Chamando a função ao adicionar o personagem
character:WaitForChild("Humanoid").Changed:Connect(function()
    disableJump()
end)

-- Se o personagem for respawnado, reaplica a configuração
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    disableJump()
end)
end)

Tab1:Button("Bring Unanchored Bricks [E]", function()
local UserInputService = game:GetService("UserInputService")
local Mouse = game:GetService("Players").LocalPlayer:GetMouse()
local Folder = Instance.new("Folder", game:GetService("Workspace"))
local Part = Instance.new("Part", Folder)
local Attachment1 = Instance.new("Attachment", Part)
Part.Anchored = true
Part.CanCollide = false
Part.Transparency = 1
local Updated = Mouse.Hit + Vector3.new(0, 5, 0)
local NetworkAccess = coroutine.create(function()
  settings().Physics.AllowSleep = false
  while game:GetService("RunService").RenderStepped:Wait() do
      for _, Players in next, game:GetService("Players"):GetPlayers() do
          if Players ~= game:GetService("Players").LocalPlayer then
              Players.MaximumSimulationRadius = 0
              sethiddenproperty(Players, "SimulationRadius", 0)
          end
      end
      game:GetService("Players").LocalPlayer.MaximumSimulationRadius = math.pow(math.huge,math.huge)
      setsimulationradius(math.huge)
  end
end)
coroutine.resume(NetworkAccess)
local function ForcePart(v)
  if v:IsA("Part") and v.Anchored == false and v.Parent:FindFirstChild("Humanoid") == nil and v.Parent:FindFirstChild("Head") == nil and v.Name ~= "Handle" then
      Mouse.TargetFilter = v
      for _, x in next, v:GetChildren() do
          if x:IsA("BodyAngularVelocity") or x:IsA("BodyForce") or x:IsA("BodyGyro") or x:IsA("BodyPosition") or x:IsA("BodyThrust") or x:IsA("BodyVelocity") or x:IsA("RocketPropulsion") then
              x:Destroy()
          end
      end
      if v:FindFirstChild("Attachment") then
          v:FindFirstChild("Attachment"):Destroy()
      end
      if v:FindFirstChild("AlignPosition") then
          v:FindFirstChild("AlignPosition"):Destroy()
      end
      if v:FindFirstChild("Torque") then
          v:FindFirstChild("Torque"):Destroy()
      end
      v.CanCollide = false
      local Torque = Instance.new("Torque", v)
      Torque.Torque = Vector3.new(100000, 100000, 100000)
      local AlignPosition = Instance.new("AlignPosition", v)
      local Attachment2 = Instance.new("Attachment", v)
      Torque.Attachment0 = Attachment2
      AlignPosition.MaxForce = 9999999999999999
      AlignPosition.MaxVelocity = math.huge
      AlignPosition.Responsiveness = 200
      AlignPosition.Attachment0 = Attachment2
      AlignPosition.Attachment1 = Attachment1
  end
end
for _, v in next, game:GetService("Workspace"):GetDescendants() do
  ForcePart(v)
end
game:GetService("Workspace").DescendantAdded:Connect(function(v)
  ForcePart(v)
end)
UserInputService.InputBegan:Connect(function(Key, Chat)
  if Key.KeyCode == Enum.KeyCode.E and not Chat then
     Updated = Mouse.Hit + Vector3.new(0, 5, 0)
  end
end)
spawn(function()
  while game:GetService("RunService").RenderStepped:Wait() do
      Attachment1.WorldCFrame = Updated
  end
end)
end)

Tab1:Label("Object Spam", Color3.fromRGB(127, 143, 166))

Tab1:Button("Get Object For Horse Spam", function()
local args = {
    [1] = "HorseDismount"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Hors1eRemot1e"):FireServer(unpack(args))
local args = {
    [1] = "PickingCar",
    [2] = "Horse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))

local args = {
    [1] = "PlayerReadyForHorse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Hors1eRemot1e"):FireServer(unpack(args))
local args = {
    [1] = "PickingCar",
    [2] = "Horse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
local args = {
    [1] = "PlayerReadyForHorse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Hors1eRemot1e"):FireServer(unpack(args))
local args = {
    [1] = "PickingCar",
    [2] = "Horse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
local args = {
    [1] = "PlayerReadyForHorse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Hors1eRemot1e"):FireServer(unpack(args))
local args = {
    [1] = "PickingCar",
    [2] = "Horse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
local args = {
    [1] = "PlayerReadyForHorse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Hors1eRemot1e"):FireServer(unpack(args))
local args = {
    [1] = "PickingCar",
    [2] = "Horse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
local args = {
    [1] = "PlayerReadyForHorse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Hors1eRemot1e"):FireServer(unpack(args))
local args = {
    [1] = "PickingCar",
    [2] = "Horse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
local args = {
    [1] = "PlayerReadyForHorse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Hors1eRemot1e"):FireServer(unpack(args))
end)

Tab1:Button("FE Horse Spam", function()
local args = {
    [1] = "CharacterSizeDown",
    [2] = 1
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clothe1s"):FireServer(unpack(args))

local personagem = game.Players.LocalPlayer.Character
local altura = 2 -- Defina a altura para onde o personagem será teletransportado

-- Verificar se o personagem existe
if personagem then
    local posicaoAtual = personagem.HumanoidRootPart.Position
    local novaPosicao = Vector3.new(posicaoAtual.X, posicaoAtual.Y + altura, posicaoAtual.Z)
    
    -- Criar um CFrame com a nova posição e com a rotação voltada para cima
    local novaCFrame = CFrame.new(novaPosicao) * CFrame.Angles(math.rad(90), 0, 0)
    
    -- Teletransportar o personagem
    personagem:SetPrimaryPartCFrame(novaCFrame)
end

local args = {
    [1] = "HorseDismount"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Hors1eRemot1e"):FireServer(unpack(args))
local args = {
    [1] = "PickingCar",
    [2] = "Horse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))

local args = {
    [1] = "CharacterSizeUp",
    [2] = 1
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clothe1s"):FireServer(unpack(args))
end)

local Tab2 = library:Window("Scripts")

Tab2:Label("Admin Commands", Color3.fromRGB(127, 143, 166))

Tab2:Button("Big Head", function()
local args = {
    [1] = "wear",
    [2] = 14124336244
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))
end)

Tab2:Button("Telekineses Tool", function()
loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-telekineses-14126"))()
end)

Tab2:Button("Click TP", function()
mouse = game.Players.LocalPlayer:GetMouse()
tool = Instance.new("Tool")
tool.RequiresHandle = false
tool.Name = "Click TP Tool"
tool.Activated:connect(function()
local pos = mouse.Hit+Vector3.new(0,2.5,0)
pos = CFrame.new(pos.X,pos.Y,pos.Z)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
end)
tool.Parent = game.Players.LocalPlayer.Backpack
end)

Tab2:Button("R6 Player", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Imagnir/r6_anims_for_r15/main/r6_anims.lua", true))()
end)

Tab2:Box("Teleport Server", function(id)
game:GetService("TeleportService"):Teleport(id) game:GetService("StarterGui"):SetCore("SendNotification", {

  Title = "Teleporting!.",

})
end)

Tab2:Box("House Play Song", function(text, focuslost)
  if focuslost then
local args = {
    [1] = "PickHouseMusicText",
    [2] = text
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sHous1e"):FireServer(unpack(args))
end
end)

Tab2:Box("Server Message", function(text, focuslost)
  if focuslost then
local args = {
    [1] = "RolePlayName",
    [2] = text
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1RPNam1eTex1t"):FireServer(unpack(args))
end

local args = {
    [1] = "CharacterSizeDown",
    [2] = 1
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clothe1s"):FireServer(unpack(args))

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

local flySpeed = 50
local flying = false

local bodyVelocity, bodyGyro

local function initialRise(character)
    local riseSpeed = 10
    local startTime = tick()
    local riseTime = 1

    while tick() - startTime < riseTime do
        bodyVelocity.Velocity = Vector3.new(0, riseSpeed, 0)
        RunService.RenderStepped:Wait()
    end
end

local function startFlying()
    if flying then return end
    flying = true

    local character = player.Character or player.CharacterAdded:Wait()
    character.Humanoid.PlatformStand = true

    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.Parent = character.HumanoidRootPart

    bodyGyro = Instance.new("BodyGyro")
    bodyGyro.MaxTorque = Vector3.new(100000, 100000, 100000)
    bodyGyro.CFrame = character.HumanoidRootPart.CFrame
    bodyGyro.Parent = character.HumanoidRootPart

    initialRise(character)

    RunService.RenderStepped:Connect(function()
        if flying then
            local moveDirection = character.Humanoid.MoveDirection * flySpeed
            local camLookVector = workspace.CurrentCamera.CFrame.LookVector

            if moveDirection.Magnitude > 0 then
                if camLookVector.Y > 0.2 then
                    moveDirection = moveDirection + Vector3.new(0, camLookVector.Y * flySpeed, 0)
                elseif camLookVector.Y < -0.2 then
                    moveDirection = moveDirection + Vector3.new(0, camLookVector.Y * flySpeed, 0)
                end
            else
                moveDirection = Vector3.new(0, 0, 0)
            end

            bodyVelocity.Velocity = moveDirection

            local tiltAngle = 30
            local tiltFactor = moveDirection.Magnitude / flySpeed
            local tiltDirection = 1

            if workspace.CurrentCamera.CFrame:VectorToObjectSpace(moveDirection).Z < 0 then
                tiltDirection = -1
            end

            local tiltCFrame = CFrame.Angles(math.rad(tiltAngle) * tiltFactor * tiltDirection, 0, 0)
            local targetCFrame = CFrame.new(character.HumanoidRootPart.Position, character.HumanoidRootPart.Position + camLookVector) * tiltCFrame
            bodyGyro.CFrame = bodyGyro.CFrame:Lerp(targetCFrame, 0.2)
        end
    end)
end

local function stopFlying()
    if not flying then return end
    flying = false

    local character = player.Character or player.CharacterAdded:Wait()
    character.Humanoid.PlatformStand = false

    if bodyVelocity then bodyVelocity:Destroy() end
    if bodyGyro then bodyGyro:Destroy() end
end

-- Iniciar o voo automaticamente ao executar o script
startFlying()


local Players = game:GetService("Players")
local player = Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local currentTarget = nil


local function changeTarget()
    local others = {}
    
    
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player then
            table.insert(others, p)
        end
    end
    
    
    if #others > 0 then
        currentTarget = others[math.random(1, #others)]
        camera.CameraSubject = currentTarget.Character:FindFirstChild("Humanoid")
    end
end


Players.PlayerRemoving:Connect(function(leavingPlayer)
    if leavingPlayer == currentTarget then
        changeTarget()  
    end
end)


player.CharacterAdded:Connect(function(character)
    
    camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
    currentTarget = nil  
end)


changeTarget()

local args = {
    [1] = "CharacterSizeDown",
    [2] = 1
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clothe1s"):FireServer(unpack(args))

-- Tempo entre os teletransportes (em segundos)
local intervalo = 1

-- O jogador que será teleportado
local jogadorAlvo = game.Players.LocalPlayer  -- Seu personagem, caso queira usar um jogador específico

-- Variável para controlar o loop
local loopAtivo = true

-- Função que teleporta o jogador para a frente de outro jogador aleatório
local function teleportToFrontOfRandomPlayer()
    -- Verifica se o jogador alvo tem um personagem válido
    if jogadorAlvo.Character and jogadorAlvo.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = jogadorAlvo.Character:FindFirstChild("HumanoidRootPart")
        
        -- Procura por outros jogadores no servidor
        local jogadores = game.Players:GetPlayers()
        local outrosJogadores = {}
        
        -- Exclui o jogador alvo da lista
        for _, jogador in ipairs(jogadores) do
            if jogador ~= jogadorAlvo and jogador.Character and jogador.Character:FindFirstChild("HumanoidRootPart") then
                table.insert(outrosJogadores, jogador)
            end
        end
        
        -- Se houver jogadores para teleportar
        if #outrosJogadores > 0 then
            local jogadorAleatorio = outrosJogadores[math.random(1, #outrosJogadores)]
            local destino = jogadorAleatorio.Character:FindFirstChild("HumanoidRootPart")
            
            -- Teleporta o jogador alvo para a frente do jogador aleatório
            if destino then
                -- Obtém a posição do jogador aleatório e calcula a posição à frente dele
                local novaPosicao = destino.Position + destino.CFrame.LookVector * 0  -- 3 studs à frente do jogador aleatório
                
                -- Teleporta o jogador alvo para a nova posição
                humanoidRootPart.CFrame = CFrame.new(novaPosicao)
            end
        end
    end
end

-- Função para lidar com a reinicialização do personagem
local function onCharacterAdded(character)
    -- Quando o personagem for adicionado, reativa o loop de teletransporte
    loopAtivo = false
end

-- Função que para o loop quando o personagem for resetado
local function onCharacterRemoving()
    -- Quando o personagem for removido (morto ou resetado), desativa o loop
    loopAtivo = false
end

-- Conecta os eventos de morte e adição do personagem
jogadorAlvo.CharacterAdded:Connect(onCharacterAdded)
jogadorAlvo.CharacterRemoving:Connect(onCharacterRemoving)

-- Loop que chama a função a cada intervalo
while true do
    if loopAtivo then
        teleportToFrontOfRandomPlayer()  -- Teleporta o jogador alvo para a frente de outro jogador
    end
    wait(intervalo)  -- Espera o tempo definido antes de teleportar novamente
end
end)

Tab2:Button("UnServer Message", function()
local args = {
    [1] = "CharacterSizeUp",
    [2] = 1
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clothe1s"):FireServer(unpack(args))




local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()


if character then
    character:BreakJoints()
end

local args = {
    [1] = "RolePlayName",
    [2] = ""
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1RPNam1eTex1t"):FireServer(unpack(args))
   
-- Defina as coordenadas desejadas
local destino = Vector3.new(432.58, -76.65, 97.99)  -- Altere os valores conforme necessário

-- Função para teletransportar o personagem
local function teleportarPersonagem()
    local jogador = game.Players.LocalPlayer  -- Obtém o jogador que está executando o script
    
    -- Verifica se o jogador está na partida
    if jogador and jogador.Character then
        local personagem = jogador.Character
        local humanoide = personagem:FindFirstChild("Humanoid")
        
        if humanoide then
            -- Teleporta o personagem para as coordenadas especificadas
            personagem:SetPrimaryPartCFrame(CFrame.new(destino))
        end
    end
end

-- Chama a função de teleporte
teleportarPersonagem()    
end)

Tab2:Button("Permission GUI", function()
-- Criar a GUI
local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player.PlayerGui

local frame = Instance.new("Frame")
frame.Parent = screenGui
frame.Size = UDim2.new(0, 200, 0, 150)
frame.Position = UDim2.new(0, 100, 0, 100)
frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
frame.Draggable = true

-- Caixa de texto para o número
local textBox = Instance.new("TextBox")
textBox.Parent = frame
textBox.Size = UDim2.new(0, 180, 0, 40)
textBox.Position = UDim2.new(0, 10, 0, 20)
textBox.PlaceholderText = "Digite o número"
textBox.ClearTextOnFocus = true

-- Botão para enviar
local button = Instance.new("TextButton")
button.Parent = frame
button.Size = UDim2.new(0, 180, 0, 40)
button.Position = UDim2.new(0, 10, 0, 70)
button.Text = "Enviar"

button.MouseButton1Click:Connect(function()
    -- Obter o valor do número
    local number = tonumber(textBox.Text)
    if number then
        -- Configurar os argumentos
        local args = {
            [1] = "GivePermissionLoopToServer",
            [2] = player,  -- Nome do jogador
            [3] = number    -- Número inserido na GUI
        }

        -- Enviar o evento
        game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))

        -- Fechar a GUI após o envio
        screenGui:Destroy()
    else
        warn("Por favor, insira um número válido.")
    end
end)
end)

Tab2:Button("Sell U House", function()
local args = {
    [1] = "PlayerSellHouse"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sHous1eChoic1e"):FireServer(unpack(args))
end)

Tab2:Button("Rainbow House", function()
while true do
    game.StarterGui:SetCore("SendNotification", {
   Title = "Important";
   Text = "You Need to Be Close to Your Home For The Script to Work";
   Icon = "";
   Duration = "6";
})

local args = {
        [1] = "ColorPickHouse",
        [2] = Color3.new(1, 0, 0.030959129333496094)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sHous1e"):FireServer(unpack(args))
    
    wait(2)  -- Espera 1 segundo antes de enviar o próximo comando
    
    local args = {
        [1] = "ColorPickHouse",
        [2] = Color3.new(0, 0.11246275901794434, 1)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sHous1e"):FireServer(unpack(args))

    wait(2)
    
    local args = {
        [1] = "ColorPickHouse",
        [2] = Color3.new(0.8743648529052734, 0, 1)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sHous1e"):FireServer(unpack(args))

    wait(2)
    
    local args = {
        [1] = "ColorPickHouse",
        [2] = Color3.new(1, 0.4917173385620117, 0)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sHous1e"):FireServer(unpack(args))

    wait(2)
    
    local args = {
        [1] = "ColorPickHouse",
        [2] = Color3.new(0.9024920463562012, 1, 0)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sHous1e"):FireServer(unpack(args))

    wait(2)  -- Espera 1 segundo antes de reiniciar o loop
end
end)

Tab2:Button("Copy Server ID", function()
game.StarterGui:SetCore("SendNotification", {
   Title = "Copied!";
   Text = "Server ID got copied!";
   Icon = "";
   Duration = "6";
})

setclipboard(game.placeId)
end)

local Tab3 = library:Window("Scripts")

Tab3:Button("Get Gun For Sounds", function()
local args = {
    [1] = "PickingTools",
    [2] = "Sniper"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))

wait(0.1)
local Character = game.Players.LocalPlayer.Character
local Backpack = game.Players.LocalPlayer.Backpack
local Tool = "Sniper"
Character.Humanoid:EquipTool(Backpack[Tool])
     wait(0.1)
end)

Tab3:Button("I See You", function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local sniperHandle = character:FindFirstChild("Sniper") and character.Sniper:FindFirstChild("Handle")

if sniperHandle then
    local soundId = 2663254285
    local volume = 0.1

    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Volume = volume
    sound.Looped = false
    sound.Parent = player:WaitForChild("PlayerGui")

    sound:Play()

    -- Faz o som durar apenas 3 segundos
    wait(3)

    -- Para e destrói o som após 3 segundos
    sound:Stop()
    sound:Destroy()
end
    local args = {
          [1] = game:GetService("Players").LocalPlayer.Character.Sniper.Handle,
          [2] = 2663254285,
          [3] = 1
      }
      
      game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Gu1nSound1s"):FireServer(unpack(args))
end)

Tab3:Button("John's Laugh", function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local sniperHandle = character:FindFirstChild("Sniper") and character.Sniper:FindFirstChild("Handle")

if sniperHandle then
    local soundId = 130759239
    local volume = 0.1

    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Volume = volume
    sound.Looped = false
    sound.Parent = player:WaitForChild("PlayerGui")

    sound:Play()

    -- Faz o som durar apenas 3 segundos
    wait(3)

    -- Para e destrói o som após 3 segundos
    sound:Stop()
    sound:Destroy()
end
    local args = {
          [1] = game:GetService("Players").LocalPlayer.Character.Sniper.Handle,
          [2] = 130759239,
          [3] = 1
      }
      
      game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Gu1nSound1s"):FireServer(unpack(args))
end)

Tab3:Button("Horror Bell", function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local sniperHandle = character:FindFirstChild("Sniper") and character.Sniper:FindFirstChild("Handle")

if sniperHandle then
    local soundId = 9065965545
    local volume = 0.1

    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Volume = volume
    sound.Looped = false
    sound.Parent = player:WaitForChild("PlayerGui")

    sound:Play()

    -- Faz o som durar apenas 3 segundos
    wait(3)

    -- Para e destrói o som após 3 segundos
    sound:Stop()
    sound:Destroy()
end
    local args = {
          [1] = game:GetService("Players").LocalPlayer.Character.Sniper.Handle,
          [2] = 9065965545,
          [3] = 1
      }
      
      game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Gu1nSound1s"):FireServer(unpack(args))
end)

Tab3:Button("Girl Scream", function()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local sniperHandle = character:FindFirstChild("Sniper") and character.Sniper:FindFirstChild("Handle")

if sniperHandle then
    local soundId = 7861818231
    local volume = 0.1

    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Volume = volume
    sound.Looped = false
    sound.Parent = player:WaitForChild("PlayerGui")

    sound:Play()

    -- Faz o som durar apenas 3 segundos
    wait(3)

    -- Para e destrói o som após 3 segundos
    sound:Stop()
    sound:Destroy()
end
    local args = {
          [1] = game:GetService("Players").LocalPlayer.Character.Sniper.Handle,
          [2] = 7861818231,
          [3] = 1
      }
      
      game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Gu1nSound1s"):FireServer(unpack(args))
end)

Tab3:Button("Goofy Scream", function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local sniperHandle = character:FindFirstChild("Sniper") and character.Sniper:FindFirstChild("Handle")

if sniperHandle then
    local soundId = 528432644
    local volume = 0.1

    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Volume = volume
    sound.Looped = false
    sound.Parent = player:WaitForChild("PlayerGui")

    sound:Play()

    -- Faz o som durar apenas 3 segundos
    wait(3)

    -- Para e destrói o som após 3 segundos
    sound:Stop()
    sound:Destroy()
end
    local args = {
          [1] = game:GetService("Players").LocalPlayer.Character.Sniper.Handle,
          [2] = 528432644,
          [3] = 1
      }
      
      game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Gu1nSound1s"):FireServer(unpack(args))
end)

Tab3:Box("Custom ID Sound", function(text, focuslost)
  if focuslost then
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local sniperHandle = character:FindFirstChild("Sniper") and character.Sniper:FindFirstChild("Handle")

if sniperHandle then
    local soundId = text
    local volume = 0.1

    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Volume = volume
    sound.Looped = false
    sound.Parent = player:WaitForChild("PlayerGui")

    sound:Play()

    -- Faz o som durar apenas 3 segundos
    wait(3)

    -- Para e destrói o som após 3 segundos
    sound:Stop()
    sound:Destroy()
end
    local args = {
          [1] = game:GetService("Players").LocalPlayer.Character.Sniper.Handle,
          [2] = text,
          [3] = 1
      }
      
      game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Gu1nSound1s"):FireServer(unpack(args))
end
end)

Tab3:Label("Data Model Scripts", Color3.fromRGB(127, 143, 166))

Tab3:Button("FE Gun Fire Model All Players", function()
-- Script de Voo sem GUI
local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local Flying = false
local Speed = 50  -- Velocidade de voo
local FlightHeight = 10  -- Altura do voo

-- Função para ativar/desativar o voo
local function toggleFlight()
    if not Flying then
        Flying = true
        local BodyVelocity = Instance.new("BodyVelocity")
        BodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
        BodyVelocity.Velocity = Vector3.new(0, 0, 0)
        BodyVelocity.Parent = Character:WaitForChild("HumanoidRootPart")

        local BodyGyro = Instance.new("BodyGyro")
        BodyGyro.MaxTorque = Vector3.new(400000, 400000, 400000)
        BodyGyro.CFrame = Character.HumanoidRootPart.CFrame
        BodyGyro.Parent = Character:WaitForChild("HumanoidRootPart")

        -- Função de controle de voo
        local userInputService = game:GetService("UserInputService")
        local flyingDirection = Vector3.new(0, 0, 0)

        userInputService.InputChanged:Connect(function(input)
            if Flying then
                if input.UserInputType == Enum.UserInputType.Keyboard then
                    if input.KeyCode == Enum.KeyCode.W then
                        flyingDirection = Vector3.new(0, 0, -Speed)
                    elseif input.KeyCode == Enum.KeyCode.S then
                        flyingDirection = Vector3.new(0, 0, Speed)
                    elseif input.KeyCode == Enum.KeyCode.A then
                        flyingDirection = Vector3.new(-Speed, 0, 0)
                    elseif input.KeyCode == Enum.KeyCode.D then
                        flyingDirection = Vector3.new(Speed, 0, 0)
                    elseif input.KeyCode == Enum.KeyCode.Space then
                        flyingDirection = Vector3.new(0, Speed, 0)
                    elseif input.KeyCode == Enum.KeyCode.LeftControl then
                        flyingDirection = Vector3.new(0, -Speed, 0)
                    end
                end
                BodyVelocity.Velocity = flyingDirection
                BodyGyro.CFrame = Character.HumanoidRootPart.CFrame
            end
        end)

        -- Manter a altura
        game:GetService("RunService").Heartbeat:Connect(function()
            if Flying then
                BodyVelocity.Velocity = flyingDirection
                BodyGyro.CFrame = Character.HumanoidRootPart.CFrame
            end
        end)
    end
end

-- Acionar o voo automaticamente
toggleFlight()

local args = {
    [1] = "RolePlayName",
    [2] = ""
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1RPNam1eTex1t"):FireServer(unpack(args))

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local currentTarget = nil


local function changeTarget()
    local others = {}
    
    
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player then
            table.insert(others, p)
        end
    end
    
    
    if #others > 0 then
        currentTarget = others[math.random(1, #others)]
        camera.CameraSubject = currentTarget.Character:FindFirstChild("Humanoid")
    end
end


Players.PlayerRemoving:Connect(function(leavingPlayer)
    if leavingPlayer == currentTarget then
        changeTarget()  
    end
end)


player.CharacterAdded:Connect(function(character)
    
    camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
    currentTarget = nil  
end)


changeTarget()

local args = {
    [1] = "wear",
    [2] = 9862651601
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))

local args = {
    [1] = "CharacterSizeDown",
    [2] = 1
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clothe1s"):FireServer(unpack(args))


local args = {
    [1] = "wear",
    [2] = 9862651601
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clothe1s"):FireServer(unpack(args))
local args = {
    [1] = "WheelChair"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1NoMoto1rVehicle1s"):FireServer(unpack(args))

-- Tempo entre os teletransportes (em segundos)
local intervalo = 0

-- O jogador que será teleportado
local jogadorAlvo = game.Players.LocalPlayer  -- Seu personagem, caso queira usar um jogador específico

-- Variável para controlar o loop
local loopAtivo = true

-- Função que teleporta o jogador para a frente de outro jogador aleatório
local function teleportToFrontOfRandomPlayer()
    -- Verifica se o jogador alvo tem um personagem válido
    if jogadorAlvo.Character and jogadorAlvo.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = jogadorAlvo.Character:FindFirstChild("HumanoidRootPart")
        
        -- Procura por outros jogadores no servidor
        local jogadores = game.Players:GetPlayers()
        local outrosJogadores = {}
        
        -- Exclui o jogador alvo da lista
        for _, jogador in ipairs(jogadores) do
            if jogador ~= jogadorAlvo and jogador.Character and jogador.Character:FindFirstChild("HumanoidRootPart") then
                table.insert(outrosJogadores, jogador)
            end
        end
        
        -- Se houver jogadores para teleportar
        if #outrosJogadores > 0 then
            local jogadorAleatorio = outrosJogadores[math.random(1, #outrosJogadores)]
            local destino = jogadorAleatorio.Character:FindFirstChild("HumanoidRootPart")
            
            -- Teleporta o jogador alvo para a frente do jogador aleatório
            if destino then
                -- Obtém a posição do jogador aleatório e calcula a posição à frente dele
                local novaPosicao = destino.Position + destino.CFrame.LookVector * 3  -- 3 studs à frente do jogador aleatório
                
                -- Teleporta o jogador alvo para a nova posição
                humanoidRootPart.CFrame = CFrame.new(novaPosicao)
            end
        end
    end
end

-- Função para lidar com a reinicialização do personagem
local function onCharacterAdded(character)
    -- Quando o personagem for adicionado, reativa o loop de teletransporte
    loopAtivo = false
end

-- Função que para o loop quando o personagem for resetado
local function onCharacterRemoving()
    -- Quando o personagem for removido (morto ou resetado), desativa o loop
    loopAtivo = false
end

-- Conecta os eventos de morte e adição do personagem
jogadorAlvo.CharacterAdded:Connect(onCharacterAdded)
jogadorAlvo.CharacterRemoving:Connect(onCharacterRemoving)

-- Loop que chama a função a cada intervalo
while true do
    if loopAtivo then
        teleportToFrontOfRandomPlayer()  -- Teleporta o jogador alvo para a frente de outro jogador
    end
    wait(intervalo)  -- Espera o tempo definido antes de teleportar novamente
end
end)

Tab3:Button("UnGun Fire Model", function()
local args = {
    [1] = "OCA"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Avata1rOrigina1l"):FireServer(unpack(args))

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()


if character then
    character:BreakJoints()
end

-- Defina as coordenadas desejadas
local destino = Vector3.new(432.58, -76.65, 97.99)  -- Altere os valores conforme necessário

-- Função para teletransportar o personagem
local function teleportarPersonagem()
    local jogador = game.Players.LocalPlayer  -- Obtém o jogador que está executando o script
    
    -- Verifica se o jogador está na partida
    if jogador and jogador.Character then
        local personagem = jogador.Character
        local humanoide = personagem:FindFirstChild("Humanoid")
        
        if humanoide then
            -- Teleporta o personagem para as coordenadas especificadas
            personagem:SetPrimaryPartCFrame(CFrame.new(destino))
        end
    end
end

-- Chama a função de teleporte
teleportarPersonagem()    
end)

Tab3:Button("FE Blue Fire All", function()
-- Script de Voo sem GUI
local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local Flying = false
local Speed = 50  -- Velocidade de voo
local FlightHeight = 10  -- Altura do voo

-- Função para ativar/desativar o voo
local function toggleFlight()
    if not Flying then
        Flying = true
        local BodyVelocity = Instance.new("BodyVelocity")
        BodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
        BodyVelocity.Velocity = Vector3.new(0, 0, 0)
        BodyVelocity.Parent = Character:WaitForChild("HumanoidRootPart")

        local BodyGyro = Instance.new("BodyGyro")
        BodyGyro.MaxTorque = Vector3.new(400000, 400000, 400000)
        BodyGyro.CFrame = Character.HumanoidRootPart.CFrame
        BodyGyro.Parent = Character:WaitForChild("HumanoidRootPart")

        -- Função de controle de voo
        local userInputService = game:GetService("UserInputService")
        local flyingDirection = Vector3.new(0, 0, 0)

        userInputService.InputChanged:Connect(function(input)
            if Flying then
                if input.UserInputType == Enum.UserInputType.Keyboard then
                    if input.KeyCode == Enum.KeyCode.W then
                        flyingDirection = Vector3.new(0, 0, -Speed)
                    elseif input.KeyCode == Enum.KeyCode.S then
                        flyingDirection = Vector3.new(0, 0, Speed)
                    elseif input.KeyCode == Enum.KeyCode.A then
                        flyingDirection = Vector3.new(-Speed, 0, 0)
                    elseif input.KeyCode == Enum.KeyCode.D then
                        flyingDirection = Vector3.new(Speed, 0, 0)
                    elseif input.KeyCode == Enum.KeyCode.Space then
                        flyingDirection = Vector3.new(0, Speed, 0)
                    elseif input.KeyCode == Enum.KeyCode.LeftControl then
                        flyingDirection = Vector3.new(0, -Speed, 0)
                    end
                end
                BodyVelocity.Velocity = flyingDirection
                BodyGyro.CFrame = Character.HumanoidRootPart.CFrame
            end
        end)

        -- Manter a altura
        game:GetService("RunService").Heartbeat:Connect(function()
            if Flying then
                BodyVelocity.Velocity = flyingDirection
                BodyGyro.CFrame = Character.HumanoidRootPart.CFrame
            end
        end)
    end
end

-- Acionar o voo automaticamente
toggleFlight()

local args = {
    [1] = "RolePlayName",
    [2] = ""
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1RPNam1eTex1t"):FireServer(unpack(args))

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local currentTarget = nil


local function changeTarget()
    local others = {}
    
    
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player then
            table.insert(others, p)
        end
    end
    
    
    if #others > 0 then
        currentTarget = others[math.random(1, #others)]
        camera.CameraSubject = currentTarget.Character:FindFirstChild("Humanoid")
    end
end


Players.PlayerRemoving:Connect(function(leavingPlayer)
    if leavingPlayer == currentTarget then
        changeTarget()  
    end
end)


player.CharacterAdded:Connect(function(character)
    
    camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
    currentTarget = nil  
end)


changeTarget()

local args = {
    [1] = "wear",
    [2] = 183468963
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))

local args = {
    [1] = "CharacterSizeDown",
    [2] = 1
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clothe1s"):FireServer(unpack(args))


local args = {
    [1] = "wear",
    [2] = 183468963
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clothe1s"):FireServer(unpack(args))
local args = {
    [1] = "WheelChair"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1NoMoto1rVehicle1s"):FireServer(unpack(args))

-- Tempo entre os teletransportes (em segundos)
local intervalo = 0

-- O jogador que será teleportado
local jogadorAlvo = game.Players.LocalPlayer  -- Seu personagem, caso queira usar um jogador específico

-- Variável para controlar o loop
local loopAtivo = true

-- Função que teleporta o jogador para a frente de outro jogador aleatório
local function teleportToFrontOfRandomPlayer()
    -- Verifica se o jogador alvo tem um personagem válido
    if jogadorAlvo.Character and jogadorAlvo.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = jogadorAlvo.Character:FindFirstChild("HumanoidRootPart")
        
        -- Procura por outros jogadores no servidor
        local jogadores = game.Players:GetPlayers()
        local outrosJogadores = {}
        
        -- Exclui o jogador alvo da lista
        for _, jogador in ipairs(jogadores) do
            if jogador ~= jogadorAlvo and jogador.Character and jogador.Character:FindFirstChild("HumanoidRootPart") then
                table.insert(outrosJogadores, jogador)
            end
        end
        
        -- Se houver jogadores para teleportar
        if #outrosJogadores > 0 then
            local jogadorAleatorio = outrosJogadores[math.random(1, #outrosJogadores)]
            local destino = jogadorAleatorio.Character:FindFirstChild("HumanoidRootPart")
            
            -- Teleporta o jogador alvo para a frente do jogador aleatório
            if destino then
                -- Obtém a posição do jogador aleatório e calcula a posição à frente dele
                local novaPosicao = destino.Position + destino.CFrame.LookVector * 0  -- 3 studs à frente do jogador aleatório
                
                -- Teleporta o jogador alvo para a nova posição
                humanoidRootPart.CFrame = CFrame.new(novaPosicao)
            end
        end
    end
end

-- Função para lidar com a reinicialização do personagem
local function onCharacterAdded(character)
    -- Quando o personagem for adicionado, reativa o loop de teletransporte
    loopAtivo = false
end

-- Função que para o loop quando o personagem for resetado
local function onCharacterRemoving()
    -- Quando o personagem for removido (morto ou resetado), desativa o loop
    loopAtivo = false
end

-- Conecta os eventos de morte e adição do personagem
jogadorAlvo.CharacterAdded:Connect(onCharacterAdded)
jogadorAlvo.CharacterRemoving:Connect(onCharacterRemoving)

-- Loop que chama a função a cada intervalo
while true do
    if loopAtivo then
        teleportToFrontOfRandomPlayer()  -- Teleporta o jogador alvo para a frente de outro jogador
    end
    wait(intervalo)  -- Espera o tempo definido antes de teleportar novamente
end
end)

Tab3:Button("UnBlueFireAll", function()
local args = {
    [1] = "OCA"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Avata1rOrigina1l"):FireServer(unpack(args))

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()


if character then
    character:BreakJoints()
end

-- Defina as coordenadas desejadas
local destino = Vector3.new(432.58, -76.65, 97.99)  -- Altere os valores conforme necessário

-- Função para teletransportar o personagem
local function teleportarPersonagem()
    local jogador = game.Players.LocalPlayer  -- Obtém o jogador que está executando o script
    
    -- Verifica se o jogador está na partida
    if jogador and jogador.Character then
        local personagem = jogador.Character
        local humanoide = personagem:FindFirstChild("Humanoid")
        
        if humanoide then
            -- Teleporta o personagem para as coordenadas especificadas
            personagem:SetPrimaryPartCFrame(CFrame.new(destino))
        end
    end
end

-- Chama a função de teleporte
teleportarPersonagem()
end)

local Tab4 = library:Window("LocalPlayer")

Tab4:Label("Server-Sided Fun Hats", Color3.fromRGB(127, 143, 166))

Tab4:Button("Doge Head", function()
local args = {
    [1] = "wear",
    [2] = 151784320
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))
end)

Tab4:Button("Sus Head", function()
local args = {
    [1] = "wear",
    [2] = 6564572490
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))
end)

Tab4:Button("1 Eye Hat", function()
local args = {
    [1] = "wear",
    [2] = 18585499897
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))
end)

Tab4:Button("Smile1 Head", function()
local args = {
    [1] = "wear",
    [2] = 6711806832
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))
end)

Tab4:Button("Smile2 Head", function()
local args = {
    [1] = "wear",
    [2] = 6809319263
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))
end)

Tab4:Button("Pop Cat Head", function()
local args = {
    [1] = "wear",
    [2] = 6380246734
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))
end)

Tab4:Button("Crown Head", function()
local args = {
    [1] = "wear",
    [2] = 4272833564
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))
end)

Tab4:Box("Custom Hat", function(text, focuslost)
  if focuslost then
local args = {
    [1] = "AskIfIdAvailable",
    [2] = text
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clothe1s"):FireServer(unpack(args))
end
end)

Tab4:Button("Reset Outfit", function()
local args = {
    [1] = "OCA"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Avata1rOrigina1l"):FireServer(unpack(args))
end)


Tab4:Slider("Walkspeed",16,120,0, function(value)
  game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
end)

Tab4:Slider("JumpPower",50,300,0, function(value)
  game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
end)


Tab4:Button("Rejoin Server", function()
game:GetService'TeleportService':TeleportToPlaceInstance(game.PlaceId,game.JobId,game:GetService'Players'.LocalPlayer)
end)

Tab4:Button("Reset Character", function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()


if character then
    character:BreakJoints()
end
end)

Tab4:Button("Rainbow Character", function()
game.StarterGui:SetCore("SendNotification", {
   Title = "Information";
   Text = "To Exit The Loop, Reset Your Characters";
   Icon = "";
   Duration = "6";
})

local cooldown = 1 -- Tempo em segundos entre cada alteração (evita o kick)
local skinTones = {
    "Really red",
    "Pink",
    "Royal purple",
    "Really blue",
    "Parsley green"
}

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local isRunning = true -- Variável de controle para o script

local function onDeath()
    -- Aqui você pode parar o script permanentemente
    print("Jogador morreu ou resetou. O script será interrompido permanentemente.")
    isRunning = false
end

-- Conecta ao evento de morte (quando o jogador morre ou reseta)
character:WaitForChild("Humanoid").Died:Connect(onDeath)

while isRunning do
    for _, tone in ipairs(skinTones) do
        if not isRunning then
            break -- Interrompe o loop caso o script tenha sido parado
        end
        
        local args = {
            [1] = "skintone",
            [2] = tone
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Updat1eAvata1r"):FireServer(unpack(args))
        
        wait(cooldown) -- Aguarda o tempo do cooldown antes de continuar
    end
    
    if not isRunning then
        break -- Sai do loop quando o script for interrompido
    end
end
end)

local Tab5 = library:Window("Spawn Cars")

Tab5:Label("Car Upgrade", Color3.fromRGB(127, 143, 166))

Tab5:Button("Rainbow Bike", function()
while true do
    local args = {
        [1] = "NoMotorColor",
        [2] = Color3.new(0.002243518829345703, 1, 0)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
    
    wait(1) -- Espera 1 segundo antes de continuar (ajuste o tempo conforme necessário)

    local args = {
        [1] = "NoMotorColor",
        [2] = Color3.new(0.1159353256225586, 0, 1)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
    
    wait(1)

    local args = {
        [1] = "NoMotorColor",
        [2] = Color3.new(0.956802487373352, 1, 0)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
    
    wait(1)

    local args = {
        [1] = "NoMotorColor",
        [2] = Color3.new(0.812100887298584, 0, 1)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
    
    wait(1)

    local args = {
        [1] = "NoMotorColor",
        [2] = Color3.new(1, 0.5107977986335754, 0.08215612173080444)
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
    
    wait(1) -- Espera 1 segundo antes de repetir tudo
end
end)

Tab5:Label("Instant Spawn Cars", Color3.fromRGB(127, 143, 166))

Tab5:Button("Cadillac", function()
local args = {
    [1] = "PickingCar",
    [2] = "Cadillac"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)






Tab5:Button("VWBus", function()
local args = {
    [1] = "PickingCar",
    [2] = "VWBus"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab5:Button("PoliceMotorcycle", function()
local args = {
    [1] = "PickingCar",
    [2] = "PoliceMotorcycle"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab5:Button("Bus", function()
local args = {
    [1] = "PickingCar",
    [2] = "Bus"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab5:Button("Tank", function()
local args = {
    [1] = "PickingCar",
    [2] = "Tank"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab5:Button("Smart Car", function()
local args = {
    [1] = "PickingCar",
    [2] = "SmartCar"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab5:Button("GoKart", function()
local args = {
    [1] = "PickingCar",
    [2] = "GoKart"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab5:Button("SchoolBus", function()
local args = {
    [1] = "PickingCar",
    [2] = "SchoolBus"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab5:Button("TowTruck", function()
local args = {
    [1] = "PickingCar",
    [2] = "TowTruck"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end)

Tab5:Label("Car Settings", Color3.fromRGB(127, 143, 166))

Tab5:Box("Music Car", function(text, focuslost)
  if focuslost then
local args = {
    [1] = "PickingCarMusicText",
    [2] = text
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
end
end)

Tab5:Button("Fire Car", function()
local args = {
    [1] = "Fire"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
end)

local Tab6 = library:Window("Give Tool To Players")

Tab6:Label("Give To All Players", Color3.fromRGB(127, 143, 166))

Tab6:Button("Give C4", function()
local players = game:GetService("Players"):GetPlayers()
local toolName = "Bomb"

for _, player in pairs(players) do
    local args = {
        [1] = "ToolGiveToServer",
        [2] = player,
        [3] = toolName
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab6:Button("Give Money Bag", function()
local players = game:GetService("Players"):GetPlayers()
local toolName = "DuffleBag"

for _, player in pairs(players) do
    local args = {
        [1] = "ToolGiveToServer",
        [2] = player,
        [3] = toolName
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab6:Button("Give Big Money Bag", function()
local players = game:GetService("Players"):GetPlayers()
local toolName = "DuffleBagMoney"

for _, player in pairs(players) do
    local args = {
        [1] = "ToolGiveToServer",
        [2] = player,
        [3] = toolName
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab6:Button("Give Paperbag Fire", function()
local players = game:GetService("Players"):GetPlayers()
local toolName = "PaperbagFire"

for _, player in pairs(players) do
    local args = {
        [1] = "ToolGiveToServer",
        [2] = player,
        [3] = toolName
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab6:Button("Give Gun", function()
local players = game:GetService("Players"):GetPlayers()
local toolName = "Assault"

for _, player in pairs(players) do
    local args = {
        [1] = "ToolGiveToServer",
        [2] = player,
        [3] = toolName
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab6:Button("Give Shovel", function()
local players = game:GetService("Players"):GetPlayers()
local toolName = "Shovel"

for _, player in pairs(players) do
    local args = {
        [1] = "ToolGiveToServer",
        [2] = player,
        [3] = toolName
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab6:Button("Give Book", function()
local players = game:GetService("Players"):GetPlayers()
local toolName = "Book"

for _, player in pairs(players) do
    local args = {
        [1] = "ToolGiveToServer",
        [2] = player,
        [3] = toolName
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab6:Button("Give Roses", function()
local players = game:GetService("Players"):GetPlayers()
local toolName = "Roses"

for _, player in pairs(players) do
    local args = {
        [1] = "ToolGiveToServer",
        [2] = player,
        [3] = toolName
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab6:Button("Give Coca Cola", function()
local players = game:GetService("Players"):GetPlayers()
local toolName = "Coke"

for _, player in pairs(players) do
    local args = {
        [1] = "ToolGiveToServer",
        [2] = player,
        [3] = toolName
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab6:Button("Give Milk", function()
local players = game:GetService("Players"):GetPlayers()
local toolName = "Milk"

for _, player in pairs(players) do
    local args = {
        [1] = "ToolGiveToServer",
        [2] = player,
        [3] = toolName
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab6:Button("Give Sign", function()
local players = game:GetService("Players"):GetPlayers()
local toolName = "Sign"

for _, player in pairs(players) do
    local args = {
        [1] = "ToolGiveToServer",
        [2] = player,
        [3] = toolName
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab6:Button("Give Shield", function()
local players = game:GetService("Players"):GetPlayers()
local toolName = "SWATShield"

for _, player in pairs(players) do
    local args = {
        [1] = "ToolGiveToServer",
        [2] = player,
        [3] = toolName
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab6:Button("Give Balloon", function()
local players = game:GetService("Players"):GetPlayers()
local toolName = "Balloon"

for _, player in pairs(players) do
    local args = {
        [1] = "ToolGiveToServer",
        [2] = player,
        [3] = toolName
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab6:Button("Give Phone", function()
local players = game:GetService("Players"):GetPlayers()
local toolName = "Iphone"

for _, player in pairs(players) do
    local args = {
        [1] = "ToolGiveToServer",
        [2] = player,
        [3] = toolName
    }

    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
end
end)

Tab6:Label("Give To Yourself", Color3.fromRGB(127, 143, 166))

local dropdown = Tab6:Dropdown("Give Yourself Item", {"Iphone", "Camcorder", "BabyBoy", "BabyGirl", "Wagon", "Sign", "Syringe", "Ear", "Trophy", "Taser", "SWATShield", "Cuffs", "Glock", "Shotgun", "Assault", "Sniper", "Bomb", "DuffleBagMoney", "Money", "CreditCardBoy", "CreditCardGirl", "Umbrella", "Roses", "Present", "SoccerBall", "Apple", "Chips", "Bloxaide", "Milk",}, function(name)
local args = {
    [1] = "PickingTools",
    [2] = name
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
end)


library:Keybind("Tab")
